* Introduction
Coffea is a columnar analysis framework, has a similar interface to common python packages like numpy or pandas.
This repository is an implementation of the single stop analysis written in Coffea. 

* Getting started
Begin by cloning and entering the repository.
#+begin_src bash
git clone git@github.com:UMN-CMS/SingleStopCoffea.git
cd SingleStopCoffea
#+end_src


We are using a container based system, using different containers for different analysis states (in the future we may build a custom container with everything we need).

For basic analysis, use the =coffea= mode, which includes =dask= and =coffea= to produce histograms. 
#+begin_src bash
source setup.sh coffea
#+end_src

If performing post processing, use the =torch= mode, which includes tools for performing the gaussian process regression.
#+begin_src bash
source setup.sh torch
#+end_src



* Running the Program
The entrypoint for the program is the command
#+begin_src bash
python3 -m analyzer
#+end_src


For more information on the use of the program, call
#+begin_src bash
python3 -m analyzer --help
#+end_src

** Examples
*** Running a Basic Analysis
The below command will run a basic analysis on the =signal_312_2000_1900= mass point. This analysis will run locally.
#+begin_src bash
python3  -m analyzer run -o "myoutput.pkl" -m objects baseline_selection dataset_category event_level jets -s signal_312_2000_1900
#+end_src

*** Viewing Information on Samples
#+begin_src bash
python3  -m analyzer samples
#+end_src

*** Viewing Information on Modules
#+begin_src bash
python3  -m analyzer modules
#+end_src


* Scaling Out
To analyze more substantial datasets, we need to be able to take advantage of distributed computing resources.
** Starting a Cluster
The =cluster-start= subcommand provides the ability to start a cluster. The below command shows how to start a cluster consisting of 20 condor worker nodes on the LPC.
#+begin_src bash
python3 -m analyzer cluster-start -t lpcondor -s :10005 -d localhost:8787 -m "2.0GB" -w 20
#+end_src


* Using Notebooks
Coffea works very nicely when used with jupyter notebooks. Chances are you want to run the notebook on a remote node, but view it in your local browser.
This is accomplished by forwarding a port from your local machine to the remote machine using the below ssh command
#+begin_src bash
ssh -N -L 5000:localhost:8999 username@remotehost
#+end_src
On the remote host, start the notebook by running from within the python environment,
#+begin_src bash
jupyter notebook --no-browser --port 8999
#+end_src
You can pick any port, for the remote machine, and you may need to if someone else is using that port.

The notebook [[file:notebooks/example.ipynb]] shows an example of doing basic analysis within a notebook.



